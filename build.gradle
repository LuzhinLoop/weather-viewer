plugins {
    id 'java'
    id 'war'
    id 'org.flywaydb.flyway' version '9.22.3'
}

group = 'io'
version = '1.0'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

ext {
    springVersion = '6.2.11'
    hibernateVersion = '6.2.8.Final'
    lombokVersion = '1.18.36'
    mapstructVersion = '1.5.5.Final'
}

repositories {
    mavenCentral()
}

dependencies {
    // BOM для управления версиями
    implementation platform("org.springframework:spring-framework-bom:${springVersion}")
    implementation platform('org.testcontainers:testcontainers-bom:1.21.3')
    implementation platform('com.fasterxml.jackson:jackson-bom:2.20.0')
    testImplementation platform('org.junit:junit-bom:5.10.0')

    /* ---------- Spring Framework ---------- */
    implementation 'org.springframework:spring-webmvc'
    implementation 'org.springframework:spring-orm'
    implementation 'org.springframework:spring-tx'

    /* ---------- MapStruct ---------- */
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    /* ---------- Безопасность ---------- */
    implementation 'org.mindrot:jbcrypt:0.4'

    /* ---------- JPA API + Hibernate ORM ---------- */
    compileOnly 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    implementation "org.hibernate:hibernate-core:${hibernateVersion}"

    /* ---------- СУБД и пул соединений ---------- */
    runtimeOnly 'org.postgresql:postgresql:42.7.7'
    implementation 'com.zaxxer:HikariCP:6.3.0'
    testImplementation 'com.h2database:h2:2.2.224'

    /* ---------- Миграции БД ---------- */
    implementation 'org.flywaydb:flyway-core:9.22.3'

    /* ---------- Шаблонизатор ---------- */
    implementation 'org.thymeleaf:thymeleaf:3.1.3.RELEASE'
    implementation 'org.thymeleaf:thymeleaf-spring6:3.1.3.RELEASE'

    /* ---------- Bootstrap ---------- */
    implementation 'org.webjars:bootstrap:5.3.2'
    implementation 'org.webjars:popper.js:2.11.7'
    implementation 'org.webjars:webjars-locator-core:0.59'
    /* ---------- Логирование ---------- */
    implementation 'org.slf4j:slf4j-api:2.0.17'
    runtimeOnly 'ch.qos.logback:logback-classic:1.5.6'

    /* ---------- Servlet API ---------- */
    providedCompile 'jakarta.servlet:jakarta.servlet-api:6.1.0'
    compileOnly 'jakarta.annotation:jakarta.annotation-api:2.1.1'

    /* ---------- HTTP Client ---------- */
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.5'
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    /* ---------- Lombok ---------- */
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    /* ---------- Тестирование ---------- */
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework:spring-test'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.mockito:mockito-core:5.20.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.20.0'
    testRuntimeOnly 'org.glassfish:jakarta.el:4.0.2'
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/weatherdb'
    user = 'postgres'
    password = 'sas'
    driver = 'org.postgresql.Driver'
    schemas = ['public']
    locations = ['filesystem:src/main/resources/db/migration']
    cleanDisabled = false
}

test {
    useJUnitPlatform()
}